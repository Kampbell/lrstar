
#ifdef LRSTAR

#pragma once

/////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                 //
//    PGLexer.h

/*    Generated by: DFASTAR 6.5.019
      Grammar:      PG.lgr
      Skeleton:     PGLexer.h.skl
      Output:       PGLexer.h
*/               
		#define  ushort unsigned short
		#define  uchar  unsigned char

		class PGLexer 
		{
			public:
         static Token  token;
			static int    tab;
			static int    line_numb;
			static int    col_numb;
			static int    line_pos;
			static char*  line_start;
			static int    line_start_numb;

			static uchar    Tm[];		// Terminal transition matrix (gives next state or reduction).
			static ushort   Tr[];		// Terminal transition matrix row (base).
			static uchar    Tc[];		// Terminal transition matrix column (displacement).
			static char     terminal[];// Terminal-symbol number for this node.

			static int    get_token ();
			static int    get_lookahead (int&);
			static void   init_lexer (char*);
			static void   prt_line ();

			static char* token_name[1];
		};

#endif
